name: Ionic CI/CD with Firebase Hosting Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      branch:
        description: 'Deploy branch'
        required: true
        default: 'staging'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.branch || 'main' }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Generate Environment File
        run: |
          mkdir -p src/environments
          cat <<EOF > src/environments/environment.maps.ts
          export const environment = {
            production: false,
            googleApiKey: "${{ secrets.GOOGLE_API_KEY }}",
            firebaseConfig: {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              projectId: "${{ secrets.FIREBASE_PID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSENGER_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}"
            },
            mappedin: {
              mapId: "${{ secrets.MAPPEDIN_MAP_ID }}",
              key: "${{ secrets.MAPPEDIN_KEY }}",
              secret: "${{ secrets.MAPPEDIN_SECRET }}"
            }
          };
          EOF
        shell: bash

      - name: Copy Generated Environment File to environment.ts
        run: cp src/environments/environment.maps.ts src/environments/environment.ts

      - name: Build Ionic App
        run: npm run build -- --configuration=maps

      - name: Run Tests
        run: npm test -- --configuration=ci
        env:
          CI: true

      - name: Debug - List Files
        run: ls -la

      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          entryPoint: ./
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_SOEN390_AAB1A }}
          channelId: live
          projectId: soen390-aab1a
