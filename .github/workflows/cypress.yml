name: Run Cypress Tests

on:
  push:
    branches:
      - main
      - staging
  pull_request:
    branches:
      - main
      - staging

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.11.1'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: npm ci

      - name: Generate Environment File
        run: |
          mkdir -p src/environments
          cat <<EOF > src/environments/environment.maps.ts
          export const environment = {
            production: false,
            googleApiKey: "${{ secrets.GOOGLE_API_KEY }}",
            firebaseConfig: {
              apiKey: "${{ secrets.FIREBASE_API_KEY }}",
              authDomain: "${{ secrets.FIREBASE_AUTH_DOMAIN }}",
              databaseURL: "${{ secrets.FIREBASE_DB_URL }}",
              projectId: "${{ secrets.FIREBASE_PID }}",
              storageBucket: "${{ secrets.FIREBASE_STORAGE_BUCKET }}",
              messagingSenderId: "${{ secrets.FIREBASE_MESSENGER_SENDER_ID }}",
              appId: "${{ secrets.FIREBASE_APP_ID }}"
            },
            mappedin: {
              mapId: "${{ secrets.MAPPEDIN_MAP_ID }}",
              key: "${{ secrets.MAPPEDIN_KEY }}",
              secret: "${{ secrets.MAPPEDIN_SECRET }}"
            }
          };
          EOF
        shell: bash

      - name: Install Ionic CLI
        run: npm install -g @ionic/cli

      - name: Start the Application
        run: ionic serve --configuration=maps --no-open &
      - name: Wait for App to be Ready
        run: npx wait-on http://localhost:8100
      - name: Run Cypress Tests
        run: npx cypress run
